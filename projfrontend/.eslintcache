[{"D:\\lcomernbootcamp\\projfrontend\\src\\index.js":"1","D:\\lcomernbootcamp\\projfrontend\\src\\Routes.js":"2","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Home.js":"3","D:\\lcomernbootcamp\\projfrontend\\src\\user\\Signin.js":"4","D:\\lcomernbootcamp\\projfrontend\\src\\user\\Signup.js":"5","D:\\lcomernbootcamp\\projfrontend\\src\\backend.js":"6","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Base.js":"7","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Menu.js":"8","D:\\lcomernbootcamp\\projfrontend\\src\\auth\\helper\\index.js":"9","D:\\lcomernbootcamp\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"10","D:\\lcomernbootcamp\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"11","D:\\lcomernbootcamp\\projfrontend\\src\\user\\UserDashBoard.js":"12","D:\\lcomernbootcamp\\projfrontend\\src\\user\\AdminDashBoard.js":"13","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\AddCategory.js":"14","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\helper\\adminapicall.js":"15","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\ManageCategories.js":"16","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\AddProduct.js":"17","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\ManageProducts.js":"18","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\UpdateProduct.js":"19","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\UpdateCategory.js":"20","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Card.js":"21","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\ImageHelper.js":"22","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\coreapicalls.js":"23","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\cartHelper.js":"24","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Cart.js":"25","D:\\lcomernbootcamp\\projfrontend\\src\\core\\StripeCheckout.js":"26","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\orderHelper.js":"27","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Paymentb.js":"28","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\paymentbhelper.js":"29","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\Orders.js":"30"},{"size":162,"mtime":1611639865910,"results":"31","hashOfConfig":"32"},{"size":2420,"mtime":1612171814471,"results":"33","hashOfConfig":"32"},{"size":1436,"mtime":1612010507114,"results":"34","hashOfConfig":"32"},{"size":3503,"mtime":1612024804360,"results":"35","hashOfConfig":"32"},{"size":3732,"mtime":1611640160716,"results":"36","hashOfConfig":"32"},{"size":75,"mtime":1610612960812,"results":"37","hashOfConfig":"32"},{"size":1294,"mtime":1612103669271,"results":"38","hashOfConfig":"32"},{"size":2976,"mtime":1611662278506,"results":"39","hashOfConfig":"32"},{"size":1470,"mtime":1612024626722,"results":"40","hashOfConfig":"32"},{"size":627,"mtime":1611640390669,"results":"41","hashOfConfig":"32"},{"size":577,"mtime":1611638409811,"results":"42","hashOfConfig":"32"},{"size":246,"mtime":1611638542508,"results":"43","hashOfConfig":"32"},{"size":2854,"mtime":1612171490069,"results":"44","hashOfConfig":"32"},{"size":2487,"mtime":1611665765649,"results":"45","hashOfConfig":"32"},{"size":4214,"mtime":1612181604638,"results":"46","hashOfConfig":"32"},{"size":2358,"mtime":1611890674039,"results":"47","hashOfConfig":"32"},{"size":5333,"mtime":1611819984436,"results":"48","hashOfConfig":"32"},{"size":4497,"mtime":1611820319993,"results":"49","hashOfConfig":"32"},{"size":5823,"mtime":1611897187770,"results":"50","hashOfConfig":"32"},{"size":3890,"mtime":1611934075761,"results":"51","hashOfConfig":"32"},{"size":2416,"mtime":1612069651127,"results":"52","hashOfConfig":"32"},{"size":582,"mtime":1612010781207,"results":"53","hashOfConfig":"32"},{"size":227,"mtime":1612008237419,"results":"54","hashOfConfig":"32"},{"size":1820,"mtime":1612167801287,"results":"55","hashOfConfig":"32"},{"size":2623,"mtime":1612118555683,"results":"56","hashOfConfig":"32"},{"size":2834,"mtime":1612687041488,"results":"57","hashOfConfig":"32"},{"size":898,"mtime":1612172037693,"results":"58","hashOfConfig":"32"},{"size":2995,"mtime":1612168249710,"results":"59","hashOfConfig":"32"},{"size":864,"mtime":1612122781388,"results":"60","hashOfConfig":"32"},{"size":1474,"mtime":1612688768701,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1gm93w8",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},"D:\\lcomernbootcamp\\projfrontend\\src\\index.js",[],["137","138"],"D:\\lcomernbootcamp\\projfrontend\\src\\Routes.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\core\\Home.js",["139","140"],"import React,{useState,useEffect} from \"react\";\r\nimport \"../styles.css\";\r\nimport { API } from \"../backend\";\r\nimport Base from \"./Base\";\r\nimport Card from \"./Card\";\r\nimport { getProducts } from \"./helper/coreapicalls\";\r\n\r\n\r\nexport default function Home() {\r\n  // console.log(\"API IS\", API);\r\n\r\nconst [products, setProducts] = useState([]);\r\nconst [error, setError] = useState(false);\r\n\r\nconst loadAllProducts=()=>{\r\n  getProducts().then((data)=>{\r\n    if(data.error){\r\n      setError({error:data.error})\r\n    }else{\r\n      setProducts(data);\r\n    }\r\n  }\r\n)\r\n}\r\n\r\nuseEffect(() => {\r\n loadAllProducts();\r\n}, []);\r\n\r\n  return (\r\n    <Base title=\"Home Page\" description=\"descrptn-WELCOME TO THE TSHIRT STORE\">\r\n      <div className=\"row text-center text-capitalize\">\r\n        {/* <div className=\"col-4\">\r\n          <Card />\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <button className=\"btn btn-success\">TEST</button>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <button className=\"btn btn-success\">TEST</button>\r\n        </div> */}\r\n        <h1 className=\"text-white\">\r\n          All products\r\n        </h1>\r\n        <div className=\"row\">\r\n          {products.map((product,index)=>{\r\n            return(\r\n              <div key={index} className=\"col-4 mb-4\">\r\n                 <Card product={product}/>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n}\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\user\\Signin.js",["141"],"import React, { useState } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { signin,authenticate,isAuthenticated } from \"../auth/helper/index\";\r\nimport { Link,Redirect } from \"react-router-dom\";\r\n\r\nconst Signin = () => { \r\n\r\nconst [values, setValues] = useState({  \r\n  email: \"raghu@gmail.com\",\r\n  password: \"raghu\",\r\n  error: \"\",\r\n  loading: false,\r\n  didRedirect: false,\r\n});\r\n\r\nconst {email,password,error,loading,didRedirect} = values; \r\n\r\nconst {user}=isAuthenticated();\r\n\r\nconst onSubmit=event=>{\r\n  event.preventDefault();\r\n  setValues({...values,error:false,loading:true}) \r\n  signin({email,password}) \r\n  .then((data)=>{\r\n     if (data.error) {\r\n       setValues({ ...values, error: data.error, loading: false });\r\n     } else {\r\n      authenticate(data,()=>{\r\n         setValues({\r\n           ...values,\r\n           didRedirect:true\r\n         });\r\n      })\r\n     }\r\n  })\r\n  .catch(console.log(\"signin request failed\"))\r\n}\r\n\r\nconst performRedirect = () => {\r\n  if (didRedirect) {\r\n    if (user && user.role === 1) {\r\n      return <Redirect to=\"/admin/dashboard\" />;\r\n    }\r\n    else{\r\n      return <Redirect to=\"/user/dashboard\" />;\r\n    }\r\n  }\r\n  if(isAuthenticated()){\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n};\r\n\r\nconst handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const loadingMessage = () => {\r\n    return (\r\n      loading && (\r\n        <div className=\"alert alert-info\">\r\n          <h2>Loading....please wait</h2>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            something went wrong{\"  \"}\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n \r\n\r\nconst signInForm = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 offset-sm-3 text-left\">\r\n        <form action=\"\">\r\n          <div className=\"form-group\">\r\n            <label className=\"text-light\">Email</label>\r\n            <input\r\n              onChange={handleChange(\"email\")}\r\n              value={email}\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              name=\"\"\r\n              id=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"text-light\">Password</label>\r\n            <input\r\n              onChange={handleChange(\"password\")}\r\n              value={password}\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              name=\"\"\r\n              id=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"form-group\"\r\n            style={{ marginTop: \"20px\"}}\r\n          >\r\n            <button\r\n              onClick={onSubmit}\r\n              className=\"btn btn-success btn-block form-control\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  return (\r\n    <Base title=\"Signin Page\" description=\"place for user to signin\">\r\n      {/* <h1>Sign in works successfully</h1> */}\r\n      {loadingMessage()}\r\n      {errorMessage()}\r\n      {signInForm()}\r\n      {performRedirect()}\r\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\user\\Signup.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\backend.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\core\\Base.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\core\\Menu.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\auth\\helper\\index.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\user\\UserDashBoard.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\user\\AdminDashBoard.js",["142"],"import React from \"react\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\nimport Base from \"../core/Base\"; \r\nimport { Link } from \"react-router-dom\";   \r\n\r\nconst AdminDashboard = () => {\r\n  const adminLeftSide = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin navigation</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">\r\n              Create categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">\r\n              Manage categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">\r\n              Create products\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">\r\n              Manage products\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">\r\n              Manage orders \r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const adminRightSide = () => {\r\n    return (\r\n      <div className=\"card mb-4\">\r\n        <h4 className=\"card-header\">Admin information</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <span\r\n              style={{ backgroundColor: \"green\" }}\r\n              className=\"badge badge-success mr-2\"\r\n            >\r\n              Name:\r\n            </span>\r\n            <span style={{ marginLeft: \"10px\" }}>{name}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span\r\n              style={{ backgroundColor: \"green\" }}\r\n              className=\"badge badge-success mr-2\"\r\n            >\r\n              E-mail:\r\n            </span>\r\n            <span style={{ marginLeft: \"10px\" }}>{email}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span style={{ backgroundColor: \"violet\" }} className=\"badge badge-danger\">Admin area</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const {\r\n    user: { name, email, role },\r\n  } = isAuthenticated();\r\n\r\n  return (\r\n    <Base\r\n      title=\"Welcome to admin area\"\r\n      description=\"manage your products here\"\r\n      className=\"p-4 container bg-success\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">{adminLeftSide()}</div>\r\n        <div className=\"col-9\"> {adminRightSide()}</div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\AddCategory.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\admin\\ManageCategories.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\admin\\AddProduct.js",["143","144","145","146","147"],"import React, { useState,useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\nimport Base from \"../core/Base\";\r\nimport { getCategories,createaProduct } from \"./helper/adminapicall\";\r\n\r\n\r\nconst AddProduct = () => {\r\n    const { user, token } = isAuthenticated(); \r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\",\r\n  });\r\n\r\n  \r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData\r\n  } = values;\r\n\r\nconst preload=()=>{\r\n    getCategories().then(data=>{\r\n         \r\n        if(data.error){\r\n            setValues({...values,error:data.error})\r\n        }else{\r\n            setValues({...values,categories:data,formData:new FormData()})\r\n            console.log(categories)\r\n        }\r\n    })\r\n}\r\nuseEffect(() => {\r\n   preload();\r\n}, []);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    createaProduct(user._id, token, formData).then((data) => {\r\n       \r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error })\r\n    \r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          description: \"\",\r\n          price: \"\",\r\n          photo: \"\",\r\n          stock: \"\",\r\n          loading: false,\r\n        //   getaRedirect:true,\r\n          createdProduct: data.name\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n// const performRedirect = () => {\r\n//     <div\r\n//       style={{ display: createdProduct ? \"\" : \"none\" }}\r\n//       className=\"alert alert-success mt-3\"\r\n//     >\r\n//       <h4>{createdProduct} created successfully</h4>\r\n//     </div>;\r\n//   if (getaRedirect) {\r\n//       setTimeout(()=>{\r\n//         return <Redirect to=\"/admin/dashboard\" />;\r\n//         },2000);\r\n//      }\r\n//  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    const value=name===\"photo\" ? event.target.files[0] : event.target.value\r\n    formData.set(name,value);\r\n    setValues({...values,[name]:value});\r\n  };\r\n\r\nconst successMessage = () => (\r\n  <div\r\n    style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    className=\"alert alert-success mt-3\"\r\n  >\r\n    <h4>\r\n      {createdProduct} created successfully \r\n    </h4>\r\n  </div>\r\n  \r\n);\r\n\r\nconst warningMessage = () => (\r\n  <div\r\n    style={{ display: error ? \"\" : \"none\" }}\r\n    className=\"alert alert-success mt-3\"\r\n  >\r\n    <h4>product not created</h4>\r\n  </div>\r\n);\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span className=\"mt-2\">Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success mt-2 \">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories && categories.map((cate,index) => <option key={index} value={cate._id}>{cate.name}</option>)}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mt-2 mb-2\"\r\n      >\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"add product here\"\r\n      description=\"welcome to product creation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {/* {performRedirect()} */}\r\n          {warningMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\ManageProducts.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\admin\\UpdateProduct.js",["148","149","150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\nimport Base from \"../core/Base\";\r\nimport { getCategories, getProduct,updateProduct } from \"./helper/adminapicall\";\r\n\r\nconst UpdateProduct = ({match}) => {\r\n  const { user,token } = isAuthenticated();\r\n \r\n  const [values, setValues] = useState({ \r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\",\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  const preload = (productId) => {\r\n    getProduct(productId).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n         preloadCategories();\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category,\r\n          stock: data.stock,\r\n          formData: new FormData(),\r\n          });\r\n         }\r\n    });\r\n  };\r\n\r\n  const preloadCategories=()=>{\r\n     getCategories().then(data=>{\r\n        if(data.error){\r\n            setValues({...values,error:data.error})\r\n        }else{\r\n            setValues({categories:data,formData:new FormData()})\r\n            console.log(categories)\r\n        }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    preload(match.params.productId);\r\n  }, []);\r\n\r\n  const onSubmit = (event) => { \r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\" });\r\n\r\n    updateProduct(match.params.productId,user._id, token, formData)\r\n    .then((data) => {\r\n      console.log(\"see this one\")\r\n      console.log(`updated data= ${data}`)\r\n       console.log(\"see this one\");\r\n      data=JSON.stringify(data);\r\n       console.log(\"see this two\");\r\n       data = JSON.parse(data);\r\n       console.log(data.product.name);\r\n       console.log(\"see this two\");\r\n       if(data.error){\r\n        setValues({ ...values, error: data.error }); \r\n      } \r\n      else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          description: \"\",\r\n          price: \"\",\r\n          photo: \"\",\r\n          stock: \"\",\r\n          loading: false,\r\n          createdProduct: data.product.name,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return(<div\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n      className=\"alert alert-success mt-3\"\r\n    >\r\n      <h4>{createdProduct} updated successfully</h4>\r\n    </div>)\r\n  };\r\n\r\n  const warningMessage = () => (\r\n    <div\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n      className=\"alert alert-success mt-3\"\r\n    >\r\n      <h4>updation failed</h4>\r\n    </div>\r\n  );\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span className=\"mt-2\">Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success mt-2 \">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group mt-2\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mt-2 mb-2\"\r\n      >\r\n        update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"update your product here\"\r\n      description=\"welcome to product updation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {warningMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\admin\\UpdateCategory.js",["152","153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\nimport Base from \"../core/Base\";\r\nimport { getSingleCategory,updateThisCategory } from \"./helper/adminapicall\";\r\n\r\nconst UpdateCategory = ({ match }) => {\r\n  const {user,token} = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n   loading: false,\r\n    error: \"\",\r\n    createdCategory: \"\",\r\n    getaRedirect: false,\r\n    \r\n  });\r\n\r\n  const {\r\n    name,\r\n    loading,\r\n    error,\r\n    createdCategory,\r\n    getaRedirect,\r\n    \r\n  } = values;\r\n\r\n  const preload = (categoryId) => { \r\n    getSingleCategory(categoryId).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n         \r\n          \r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    preload(match.params.categoryId);\r\n  }, []);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\" });\r\n console.log(`category id is ${match.params.categoryId}`);\r\n  const latest = { name };\r\n  console.log(latest);\r\n    updateThisCategory(match.params.categoryId,user._id,token,latest).then(\r\n      (data) => {\r\n          console.log(\"see this one\");\r\n           console.log(`updated data= ${data}`);\r\n           console.log(\"see this one\");\r\n           data = JSON.stringify(data);\r\n           console.log(\"see this two\");\r\n           data = JSON.parse(data);\r\n           console.log(data);\r\n           console.log(\"see this two\");\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            loading: false,\r\n            createdCategory: data.name,\r\n            \r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  \r\n  const handleChange = (name) => (event) => {\r\n    const value =event.target.value;\r\n    // formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div\r\n        style={{ display: createdCategory ? \"\" : \"none\" }}\r\n        className=\"alert alert-success mt-3\"\r\n      >\r\n        <h4>{createdCategory} updated successfully</h4>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const warningMessage = () => (\r\n    <div\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n      className=\"alert alert-success mt-3\"\r\n    >\r\n      <h4>updation failed</h4>\r\n    </div>\r\n  );\r\n\r\n  const createCategoryForm = () => (\r\n    <form>\r\n      <div className=\"form-group mt-2\">\r\n          <input\r\n            onChange={handleChange(\"name\")}\r\n            className=\"form-control\"\r\n            placeholder=\"Category\"\r\n            name=\"name\"\r\n            value={name}\r\n          />\r\n        \r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mt-2 mb-2\"\r\n      >\r\n        update Category\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"update your category here\"\r\n      description=\"welcome to category updation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {warningMessage()}\r\n          {createCategoryForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateCategory;\r\n\r\n// import React from 'react'\r\n\r\n// function UpdateCategory() {\r\n//     return (\r\n//         <div>\r\n//             <h1>hii from update category</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default UpdateCategory\r\n\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Card.js",["155","156","157"],"import React,{useState,useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport ImageHelper from './helper/ImageHelper';\r\nimport addItemToCart,{removeItemFromCart } from \"./helper/cartHelper\";\r\n\r\nconst Card=({\r\n    product,\r\n    addToCart=true,\r\n    removeFromCart=false,\r\n    setReload=f=>f,\r\n    // setReload=function(f){return f},\r\n    reload=false\r\n})=> {\r\n\r\nconst [redirect, setRedirect] = useState(false);\r\nconst [count, setCount] = useState(product.count);\r\n\r\n    const cardTitle = product ? product.name:\"Default product from pixels\"\r\n    const cardDescription = product ? product.description:\"Default description\"\r\n    const cardPrice = product ? product.price:\"Default price\"\r\n\r\nconst addToCartX=()=>{\r\n    addItemToCart(product,()=>{\r\n        setRedirect(true);\r\n    })\r\n}\r\n\r\n    const getARedirect=(redirect)=>{\r\n        if(redirect){\r\n            return <Redirect to=\"/cart\" />\r\n        }\r\n    }\r\n  \r\n    const showAddToCart = (addToCart) => {\r\n        if (addToCart){\r\n          return (\r\n            <button\r\n              onClick={addToCartX}\r\n              className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          );\r\n        }\r\n    };\r\n     const showRemoveFromCart = (removeFromCart) => {\r\n       if (removeFromCart) {\r\n         return (\r\n           <button\r\n             onClick={() => {\r\n                 removeItemFromCart(product._id);\r\n                 setReload(!reload);\r\n             }}\r\n             className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\r\n           >\r\n             Remove from cart\r\n           </button>\r\n         );\r\n       }\r\n     };\r\n\r\n    return (\r\n      <div className=\"card text-white bg-dark border border-info \">\r\n        <div className=\"card-header lead\">{cardTitle}</div>\r\n        <div className=\"card-body\">\r\n          {getARedirect(redirect)}\r\n          <ImageHelper product={product} />\r\n          <p className=\"lead bg-success mt-2 font-weight-normal text-wrap\">\r\n            {cardDescription}\r\n          </p>\r\n          <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cardPrice}</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">{showAddToCart(addToCart)}</div>\r\n            <div className=\"col-12\">{showRemoveFromCart(removeFromCart)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Card;\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\ImageHelper.js",["158"],"import React from 'react';\r\nimport { API } from '../../backend';\r\n\r\n\r\nconst ImageHelper = ({ product }) => {\r\n    const imageurl = product\r\n      ? `${API}product/photo/${product._id}`\r\n      : `https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260`;\r\n  return (\r\n    <div className=\"rounded border border-success p-2\">\r\n      <img\r\n        src={imageurl}\r\n        alt=\"photo\"\r\n        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        className=\"mb-3 rounded\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageHelper;","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\cartHelper.js",["159"]," const addItemToCart = (item, next) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    cart.push({\r\n      ...item,\r\n      count:1\r\n    });\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  };\r\n};\r\nexport default addItemToCart;\r\n\r\nexport const loadCart=()=>{\r\n if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      return JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n}\r\n};\r\n\r\n\r\n\r\nexport const removeItemFromCart = (productId) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    cart.map((product, i) => {\r\n      if (product._id === productId) {\r\n        cart.splice(i, 1);\r\n      }\r\n    });\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n  return cart; \r\n};\r\n\r\nexport const cartEmpty = (dummy,next) => {\r\n  if (typeof window !== undefined) {\r\n    localStorage.removeItem(\"cart\");\r\n    console.log(`${dummy}`);\r\n    let cart = [];\r\n     localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  }\r\n};\r\n\r\n//now question may arise that why we are using next (middleware) in following  \r\n//addItemToCart method and the answer is ...\r\n//when we are calling the following method from the file Card.js\r\n//we are calling the following method from the function named addToCart\r\n//so using this next in following method we are allowing the calling method addItemToCart from addToCart of Card.js file\r\n//to execute the callback function\r\n\r\n\r\n//method addItemToCart from addToCart of Card.js file\r\n\r\n// const addToCart = () => {\r\n//   addItemToCart(product, () => {\r\n//     setRedirect(true);\r\n//   });\r\n// };\r\n\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\core\\Cart.js",["160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles.css\";\r\nimport { API } from \"../backend\";\r\nimport Base from \"./Base\";\r\nimport Card from \"./Card\";\r\nimport { loadCart} from \"./helper/cartHelper\";\r\nimport StripeCheckout from \"./StripeCheckout\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n// import { getProducts } from \"./helper/coreapicalls\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paymentb from \"./Paymentb\";\r\n\r\n\r\n\r\nconst Cart=()=> {\r\n  // console.log(\"API IS\", API);\r\nconst [products, setProducts] = useState([]);\r\nconst [reload, setReload] = useState(false); \r\n\r\nuseEffect(() => {\r\n   setProducts(loadCart());\r\n}, [reload]);\r\n\r\n\r\n// const loadAllProducts=()=>{\r\n//     return isAuthenticated() ? (\r\n//       <div>\r\n//         <h2>this section is to load products</h2>\r\n//         {products.map((product, index) => (\r\n//           <Card\r\n//             key={index}\r\n//             product={product}\r\n//             removeFromCart={true}\r\n//             addToCart={false}\r\n//             setReload={setReload}\r\n//             reload={reload}\r\n//           />\r\n//         ))}\r\n//       </div>\r\n//     ) : (\r\n//       <Link to=\"/signin\">\r\n//         <button className=\"btn btn-warning\">Please signin first</button>\r\n//       </Link>\r\n//     );\r\n// }\r\n\r\n\r\n\r\nconst loadAllProducts = (products) => {\r\n\r\n  if (products !== undefined) {\r\n    return (\r\n      <div>\r\n        <h2>this section is to load products</h2>\r\n        {products.map((product, index) => (\r\n          <Card\r\n            key={index}\r\n            product={product}\r\n            removeFromCart={true}\r\n            addToCart={false}\r\n            setReload={setReload}\r\n            reload={reload}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n      <div>\r\n        <h1>Your cart is empty</h1>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n};\r\n\r\n// const loadCheckout = () => {\r\n//   return (\r\n//     <div>\r\n//       <h2>this section is for CheckOut</h2>\r\n//     </div>\r\n//   );\r\n// };\r\n  \r\n\r\n  return (\r\n    <Base title=\"Cart Page\" description=\"Ready to CheckOut\">\r\n      <div className=\"row text-center text-capitalize\">\r\n        <div className=\"col-6\">{loadAllProducts(products)}</div>\r\n        <div className=\"col-6\">\r\n          {/* {loadCheckout()} */}\r\n          <StripeCheckout\r\n            products={products}\r\n            setReload={setReload}\r\n            reload={reload}\r\n          />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Paymentb products={products} setReload={setReload} reload={reload} />\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\core\\StripeCheckout.js",["163","164","165","166","167","168","169","170"],"import React,{useState,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { cartEmpty, loadCart } from './helper/cartHelper';\r\nimport StripeCheckoutButton from \"react-stripe-checkout\";\r\nimport { API } from '../backend';\r\nimport createOrder from \"./helper/orderHelper\";\r\n\r\nconst StripeCheckout=({products,setReload=f=>f,reload=false})=> {\r\n\r\n const [data, setData] = useState({\r\n     loading:false,\r\n     success:false,\r\n     error:\"\",\r\n     address:\"\"\r\n });\r\n\r\n const token = isAuthenticated() && isAuthenticated().token;\r\n const userId = isAuthenticated() && isAuthenticated().user._id;\r\n\r\n// const getFinalPrice=()=>{\r\n//     return products.reduce((currentvalue,nextvalue)=>{\r\n//         return currentvalue.price + (nextvalue.count * nextvalue.price);\r\n//     },0)\r\n// }\r\n\r\nconst getFinalPrice = () => {\r\n  let amount=0;\r\nif(products !== undefined){\r\n      products.map((p) => {\r\n        amount = amount + p.price;\r\n      });\r\n       return amount;\r\n}else{\r\n    return(\r\n        <div>\r\n            <h1>go and buy some fucking items</h1>\r\n        </div>\r\n    );\r\n}\r\n \r\n};\r\n\r\nconst makePayment = (token) => {\r\n        const body = {\r\n          token,\r\n          products,\r\n        };\r\n        const headers = {\r\n          \"Content-Type\": \"application/json\",\r\n        };\r\n\r\n        return fetch(`${API}/stripepayment`, {\r\n          method: \"POST\",\r\n          headers,\r\n          body: JSON.stringify(body),\r\n        })\r\n          .then((response) => {\r\n            console.log(\"RESPONSE \", response);\r\n            const { status } = response;\r\n            console.log(\"STATUS \", status);\r\n            //call further methods\r\n            cartEmpty(\"dummy\",()=>{\r\n              console.log(\"cartEmpty function executed\");\r\n             });\r\n             setReload(!reload);\r\n          })\r\n          .catch((error) => console.log(error));\r\n}\r\n\r\nconst showStripeButton=()=>{\r\n    return isAuthenticated() ? (\r\n      <StripeCheckoutButton\r\n        stripeKey=\"pk_test_51IFYyDJeQwewPCJVtvdpG2RLfNijVX7oFHF2hlHMGBUBhb1FYKjrfVmNzj8j9YN2FBOMOE0PrXnukg1c9jTwkWUV00bVLAxFI4\"\r\n        token={makePayment}\r\n        amount={getFinalPrice() * 100}\r\n        name=\"buy t-shirts\"\r\n        shippingAddress\r\n        billingAddress\r\n      >\r\n        <button className=\"btn btn-success\">Pay with stripe</button>\r\n      </StripeCheckoutButton>\r\n    ) : (\r\n      <Link to=\"/signin\">\r\n        <button className=\"btn btn-warning\">Please signin to checkout</button>\r\n      </Link>\r\n    );\r\n}\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"text-white\">\r\n          Stripe checkout loaded {\"  \"}\r\n          {getFinalPrice()}\r\n          {\"  \"}\r\n          {isAuthenticated() && products && showStripeButton()}\r\n        </h2>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default StripeCheckout;\r\n","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\orderHelper.js",[],["171","172"],"D:\\lcomernbootcamp\\projfrontend\\src\\core\\Paymentb.js",["173","174","175","176","177"],"import React, { useState, useEffect } from \"react\";\nimport { loadCart, cartEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/orderHelper\";\nimport { isAuthenticated } from \"../auth/helper\";\n\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Paymentb = ({ products, setReload = f => f, reload = undefined }) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION\", info);\n      if (info.error) {\n        setInfo({ ...info, error: info.error });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({ clientToken });\n      }\n    });\n  };\n\n  const showbtdropIn = () => {\n    return (\n      <div>\n        {info.clientToken !== null && products ? (\n          <div>\n            <DropIn\n              options={{ authorization: info.clientToken }}\n              onInstance={(instance) => (info.instance = instance)}\n            />\n            <button className=\"btn btn-block btn-success\" onClick={onPurchase}>\n              Buy\n            </button>\n          </div>\n        ) : (\n          isAuthenticated() && (<h3>add something to cart</h3>)\n        )}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const onPurchase = () => {\n    setInfo({ loading: true });\n    let nonce;\n    let getNonce = info.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData)\n        .then(response => {\n          setInfo({ ...info, success: response.success, loading: false });\n          console.log(\"PAYMENT SUCCESS\");\n\n         const orderData = {\n           products: products,\n           transaction_id: response.transaction.id,\n           amount: response.transaction.amount,\n         };\n\n         createOrder(userId, token, orderData);\n\n          //TODO: empty the cart\n          cartEmpty(\"dummy from btree\",()=>{\n            console.log(\"dummy cartempty successful\");\n          });\n          //TODO: force reload\n          setReload(!reload);\n        })\n        .catch(error => {\n          setInfo({ loading: false, success: false });\n          console.log(\"PAYMENT FAILED\");\n        });\n    });\n  };\n\n  const getAmount = () => {\n    let amount = 0;\n    products && products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return (\n    <div>\n      <h3>Your bill is {getAmount()} $</h3>\n      {isAuthenticated() && showbtdropIn()}\n    </div>\n  );\n};\n\nexport default Paymentb;\n","D:\\lcomernbootcamp\\projfrontend\\src\\core\\helper\\paymentbhelper.js",[],"D:\\lcomernbootcamp\\projfrontend\\src\\admin\\Orders.js",["178"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getOrders } from \"./helper/adminapicall\";\r\n \r\nconst Orders = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n\r\nconst token = isAuthenticated() && isAuthenticated().token;\r\nconst userId = isAuthenticated() && isAuthenticated().user._id;\r\n\r\nconst seeAllOrders=()=>{ \r\n  getOrders(userId, token).then((data) => {\r\n   if (data.error) {\r\n     console.log(data.error); \r\n   } else {\r\n    //    console.log(\"data by vivek\");\r\n    //  console.log(data);\r\n    //  console.log(\"data by vivek\");\r\n     setOrders(data);\r\n    } \r\n });\r\n}\r\n\r\n   return (\r\n    <Base title=\"Welcome admin\" description=\"Manage orders here\">\r\n      <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n        <span className=\"\">Admin Home</span>\r\n      </Link>\r\n      <h2 className=\"mb-4 mt-3\">All orders:</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"text-center text-white my-3\">\r\n           manage orders\r\n           {seeAllOrders()}\r\n           {orders.map((order,index)=>{\r\n                return (\r\n                 <div key={index}>\r\n                  <h1>{order.amount}</h1>\r\n                  </div>\r\n               );\r\n           })}\r\n          </h2>\r\n         </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"187","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":13},{"ruleId":"183","severity":1,"message":"188","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":14},{"ruleId":"183","severity":1,"message":"189","line":74,"column":26,"nodeType":"185","messageId":"186","endLine":74,"endColumn":30},{"ruleId":"183","severity":1,"message":"190","line":2,"column":16,"nodeType":"185","messageId":"186","endLine":2,"endColumn":24},{"ruleId":"183","severity":1,"message":"191","line":34,"column":5,"nodeType":"185","messageId":"186","endLine":34,"endColumn":13},{"ruleId":"183","severity":1,"message":"192","line":35,"column":5,"nodeType":"185","messageId":"186","endLine":35,"endColumn":12},{"ruleId":"183","severity":1,"message":"193","line":38,"column":5,"nodeType":"185","messageId":"186","endLine":38,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":55,"column":4,"nodeType":"196","endLine":55,"endColumn":6,"suggestions":"197"},{"ruleId":"183","severity":1,"message":"191","line":31,"column":5,"nodeType":"185","messageId":"186","endLine":31,"endColumn":13},{"ruleId":"183","severity":1,"message":"192","line":32,"column":5,"nodeType":"185","messageId":"186","endLine":32,"endColumn":12},{"ruleId":"183","severity":1,"message":"193","line":35,"column":5,"nodeType":"185","messageId":"186","endLine":35,"endColumn":17},{"ruleId":"194","severity":1,"message":"198","line":70,"column":6,"nodeType":"196","endLine":70,"endColumn":8,"suggestions":"199"},{"ruleId":"183","severity":1,"message":"192","line":21,"column":5,"nodeType":"185","messageId":"186","endLine":21,"endColumn":12},{"ruleId":"183","severity":1,"message":"193","line":24,"column":5,"nodeType":"185","messageId":"186","endLine":24,"endColumn":17},{"ruleId":"194","severity":1,"message":"200","line":46,"column":6,"nodeType":"196","endLine":46,"endColumn":8,"suggestions":"201"},{"ruleId":"183","severity":1,"message":"202","line":1,"column":24,"nodeType":"185","messageId":"186","endLine":1,"endColumn":33},{"ruleId":"183","severity":1,"message":"203","line":16,"column":8,"nodeType":"185","messageId":"186","endLine":16,"endColumn":13},{"ruleId":"183","severity":1,"message":"204","line":16,"column":15,"nodeType":"185","messageId":"186","endLine":16,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":11,"column":7,"nodeType":"207","endLine":16,"endColumn":9},{"ruleId":"208","severity":1,"message":"209","line":33,"column":27,"nodeType":"210","messageId":"211","endLine":33,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"212","line":8,"column":10,"nodeType":"185","messageId":"186","endLine":8,"endColumn":25},{"ruleId":"183","severity":1,"message":"188","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":14},{"ruleId":"183","severity":1,"message":"202","line":1,"column":24,"nodeType":"185","messageId":"186","endLine":1,"endColumn":33},{"ruleId":"183","severity":1,"message":"213","line":4,"column":21,"nodeType":"185","messageId":"186","endLine":4,"endColumn":29},{"ruleId":"183","severity":1,"message":"214","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":19},{"ruleId":"183","severity":1,"message":"215","line":11,"column":9,"nodeType":"185","messageId":"186","endLine":11,"endColumn":13},{"ruleId":"183","severity":1,"message":"216","line":11,"column":15,"nodeType":"185","messageId":"186","endLine":11,"endColumn":22},{"ruleId":"183","severity":1,"message":"217","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":13},{"ruleId":"183","severity":1,"message":"218","line":19,"column":8,"nodeType":"185","messageId":"186","endLine":19,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":30,"column":24,"nodeType":"210","messageId":"211","endLine":30,"endColumn":26},{"ruleId":"179","replacedBy":"219"},{"ruleId":"181","replacedBy":"220"},{"ruleId":"183","severity":1,"message":"213","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":18},{"ruleId":"183","severity":1,"message":"188","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"221","line":56,"column":6,"nodeType":"196","endLine":56,"endColumn":8,"suggestions":"222"},{"ruleId":"183","severity":1,"message":"223","line":61,"column":9,"nodeType":"185","messageId":"186","endLine":61,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":96,"column":32,"nodeType":"210","messageId":"211","endLine":96,"endColumn":34},{"ruleId":"183","severity":1,"message":"202","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Link' is defined but never used.","'role' is assigned a value but never used.","'Redirect' is defined but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["226"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'match.params.categoryId' and 'preload'. Either include them or remove the dependency array.",["228"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'isAuthenticated' is defined but never used.","'loadCart' is defined but never used.","'createOrder' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.",["224"],["225"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["229"],"'getNonce' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [preload]",{"range":"238","text":"239"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"240","text":"241"},"Update the dependencies array to be: [match.params.categoryId, preload]",{"range":"242","text":"243"},"Update the dependencies array to be: [token, userId]",{"range":"244","text":"245"},[1163,1165],"[preload]",[1682,1684],"[match.params.productId, preload]",[1010,1012],"[match.params.categoryId, preload]",[1628,1630],"[token, userId]"]